security:
    encoders:
        App\Entity\User:
            algorithm: bcrypt
    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        in_memory: { memory: ~ }
        our_db_provider:
            entity:
                class: App\Entity\User

    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            pattern: ^/
            anonymous: ~
            http_basic: ~
            provider: our_db_provider
            form_login:
                login_path: user_welcome
                check_path: security_login 
                failure_path: user_welcome
                username_parameter: _email
            logout:
                path: security_logout
                target: index

            # activate different ways to authenticate

            # http_basic: true
            # https://symfony.com/doc/current/security.html#a-configuring-how-your-users-will-authenticate

            # form_login: true
            # https://symfony.com/doc/current/security/form_login_setup.html

    role_hierarchy:
        ROLE_ADMIN: ROLE_USER

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
         - { path: ^/admin, roles: ROLE_ADMIN }
         - { path: ^/user/welcome , roles: IS_AUTHENTICATED_ANONYMOUSLY}
         - { path: ^/user/account, roles: ROLE_USER }
         - { path: ^/checkout, roles: ROLE_USER }
         - { path: ^/order, roles: ROLE_USER }
         - { path: ^/internal, roles: IS_AUTHENTICATED_ANONYMOUSLY, ips: [127.0.0.1, ::1, 192.168.0.1/24] }
         - { path: ^/internal, roles: ROLE_NO_ACCESS }
